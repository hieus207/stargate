(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1731],{66396:function(){},13679:function(t,n,e){"use strict";e.r(n),e.d(n,{tonConnectWallet:function(){return y}});var i=e(28996);let o=new i.HF({manifestUrl:new URL("/tonconnect-manifest.json",window.location.href).toString()});var s=e(51417),r=e(65720),a=e(82047);async function c(t){var n;let{boc:e,walletAddress:i,chainKey:o}=t,{endpoint:c}=(0,a.k)(o),h=s.Cell.fromBase64(e).hash().toString("base64"),u=new URL("api/v3/messages",c),{data:d}=await r.Z.get(u.toString(),{params:{destination:i,msg_hash:h}});if(!(null===(n=d.messages)||void 0===n?void 0:n.length))return;let l=d.messages.at(0).hash,g=new URL("api/v3/transactionsByMessage",c),{data:w}=await r.Z.get(g.toString(),{params:{direction:"in",msg_hash:l}});return w.transactions[0]}var h=e(98530),u=e(59533),d=e(87376).Buffer;let l="TonConnect",g="https://icons-ckg.pages.dev/stargate-light/networks/ton.svg";class w extends h.qj{get signer(){var t;return null===(t=this.walletInfo)||void 0===t?void 0:t.provider}subscribe(){this.tonConnectUI.onStatusChange(t=>{this.update(t)})}update(t,n){t?(this.chainKey=function(t){switch(t){case f.MAINNET:return"ton";case f.TESTNET:return"ton-testnet";default:return}}(t.account.chain),this.address=(0,i.mb)(t.account.address,t.account.chain===f.TESTNET),this.publicKey=t.account.publicKey,this.walletInfo=t,this.isConnected=!0,this.isConnecting=!1,void 0!==t.imageUrl&&(this.icon=t.imageUrl,this.type=t.name)):console.error(n)}connect(){return this.tonConnectUI.openModal()}disconnect(){return this.type=l,this.icon=g,this.isConnected=!1,this.isConnecting=!1,this.isSwitchingChain=!1,this.isAutoConnectEnabled=!1,this.tonConnectUI.disconnect()}autoConnect(){return this.tonConnectUI.connector.restoreConnection()}async switchChain(t){if(this.chainKey!==t)throw Error("Switch wallet chain to ".concat(t))}async getNativeChainId(){var t;return Number(null===(t=this.tonConnectUI.wallet)||void 0===t?void 0:t.account.chain)}getAddress(){return Promise.resolve(this.address)}async signAndSubmit(t,n){var e;let i={...e=await t.unwrap(),from:function(t){if(void 0!==t)return m(t)}(e.from),messages:e.messages.map(p)},{chainKey:o}=t,{from:s}=i;if(!s)throw Error("No srcAddress");if(!o)throw Error("No chainKey");let{boc:r}=await this.tonConnectUI.sendTransaction(i,{}),a=await v(async()=>{let t=await c({boc:r,walletAddress:s,chainKey:o});if(t)return"0x".concat(d.from(t.hash,"base64").toString("hex"));throw Error("No receipt")},{maxAttempts:10,retryTimeout:3e3,error:"Error getting transaction hash"});return{boc:r,txHash:a,wait:async()=>({txHash:a})}}constructor(t){super(),this.tonConnectUI=t,this.chainType="ton",this.isAvailable=!0,this.walletInfo=void 0,this.chainKey=void 0,this.address=void 0,this.icon=g,this.type=l,(0,u.rC)(this,{update:u.aD.bound,disconnect:u.aD.bound,signer:u.Fl,address:!0,chainKey:!0,isConnected:!0,isConnecting:!0,isAvailable:!0,isSwitchingChain:!0,icon:!0}),this.subscribe()}}let f={MAINNET:"-239",TESTNET:"-3"};function p(t){return{payload:function(t){if(void 0!==t)return"string"==typeof t?t:t.toBoc().toString("base64")}(t.payload),amount:t.amount.toString(),address:m(t.address),stateInit:function(t){if(void 0!==t)return t.toString()}(t.stateInit)}}function m(t){return"string"==typeof t?t:t.toRawString()}async function v(t,n){let{maxAttempts:e,retryTimeout:i,error:o}=n,s=0;for(;s++<e;)try{return await t()}catch(t){await C(i)}throw Error(o)}async function C(t){return new Promise(n=>setTimeout(n,t))}Object.assign(window,{tonConnectUI:o}),console.log("tonConnectUI injected into window");let y=new w(o)},82047:function(t,n,e){"use strict";e.d(n,{k:function(){return o}}),e(23974);let i={ton:"https://toncenter.com/","ton-testnet":"https://testnet.toncenter.com/"};function o(t){var n;if(!i[t])throw Error("Unsupported ton chain: ".concat(t));return{endpoint:(n=new URL("/rpc/".concat(t),window.location.toString()).toString()).endsWith("/")?n:"".concat(n,"/")}}}}]);